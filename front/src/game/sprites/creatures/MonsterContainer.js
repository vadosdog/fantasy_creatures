import Monster1 from "./Monster1.js";

export default class MonsterContainer extends Phaser.GameObjects.Container {
    creatureSprite
    creature
    creatureText

    constructor(creature, scene, x, y) {
        super(scene, x, y)
        scene.add.existing(this);

        this.creature = creature


        this.defaultDirection
        if (creature.direction === 'left') {
            this.defaultDirection = 'stand_left'
        } else {
            this.defaultDirection = 'stand_right'
        }


        this.creatureSprite = new Monster1(creature.texture, scene, 0, -20, this.defaultDirection);
        this.creatureSprite.setScale(1.7, 1.7)
        this.add(this.creatureSprite)
        this.creatureSprite.setDefaultState()

        this.creatureText = scene.add.text(
            0,
            12,
            creature.name + "\n" + Math.ceil(creature.health) + "/" + creature.getMaxHealth(),
            {
                fontFamily: "arial",
                fontSize: "11px",
                align: "center"
            }
        )
        this.creatureText.x = this.creatureText.x - (this.creatureText.width / 2)
        this.add(this.creatureText)
    }

    setMonsterState(newState) {
        this.creatureSprite.setMonsterState(newState)
    }

    setDefaultState() {
        this.creatureSprite.setDefaultState()
    }

    updateVisual() {
        this.creatureText.setText(this.creature.name + "\n" + this.creature.health + "/" + this.creature.getMaxHealth());
    }

    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –∏–ª–∏ –ª–æ–≥–∏–∫–∏
    update(time, delta) {
        // –õ–æ–≥–∏–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    }

    playActionText(text, color) {
        let actionText = this.scene.add.text(
            0,
            12,
            text,
            {
                fontFamily: "arial",
                fontSize: "16px",
                fontWeight: "bold",
                align: "center",
                color
            }
        )
        actionText.x = this.creatureText.x - (this.creatureText.width / 2)
        this.add(actionText)

        this.scene.tweens.add({
            targets: actionText,
            y: actionText.y - 40,
            alpha: 0,
            duration: 1000,
            ease: 'Power1',
            onComplete: () => {
                actionText.destroy(); // —É–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
            }
        });
    }

    updateEffectsIcons() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏–∫–æ–Ω–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        this.effectIcons?.forEach(icon => icon.destroy());
        this.effectIcons = [];

        // –ï—Å–ª–∏ —É —Å—É—â–µ—Å—Ç–≤–∞ –Ω–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ - –≤—ã—Ö–æ–¥–∏–º
        if (!this.creature?.effects?.length) return;

        // –≠–º–æ–¥–∑–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (–±–∞—Ñ—ã –∏ –¥–µ–±–∞—Ñ—ã)
        const effectEmojis = {
            // –ë–∞—Ñ—ã
            'empower': 'üí™',
            'haste': '‚ö°',
            'luck': 'üçÄ',
            'regen': 'üíö',
            'thorns': 'üåµ',
            'aegis': 'üõ°Ô∏è',
            'defense': 'üõ°Ô∏è', // –º–æ–∂–Ω–æ –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π

            // –î–µ–±–∞—Ñ—ã
            'poison': '‚ò†Ô∏è',
            'bleed': 'üíâ',
            'burn': 'üî•',
            'chill': '‚ùÑÔ∏è',
            'blind': 'üëÅÔ∏è‚Äçüó®Ô∏è',
            'curse': 'üìõ',
            'madness': 'ü§™',
            'fear': 'üò±',
            'confusion': 'üòñ' // –Ω—É–∂–Ω–æ –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π
        };

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∏–∫–æ–Ω–∫–∏
        const iconSize = 10; // –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏
        const padding = 5;   // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∏–∫–æ–Ω–∫–∞–º–∏
        let offsetX = -20;     // –°–º–µ—â–µ–Ω–∏–µ –ø–æ X

        this.creature.effects.forEach((effect, i) => {
            const emoji = effectEmojis[effect.effect];
            if (!emoji) return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã

            // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —ç–º–æ–¥–∑–∏
            const icon = this.scene.add.text(
                offsetX + i % 4 * (iconSize + padding),
                -30 + Math.floor(i / 4) * (iconSize + padding), // –†–∞–∑–º–µ—â–∞–µ–º –Ω–∞–¥ —Å—É—â–µ—Å—Ç–≤–æ–º
                emoji,
                {
                    fontSize: iconSize + 'px',
                    padding: {x: 2, y: 2}
                }
            ).setOrigin(0.5);

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            this.add(icon);
            this.effectIcons.push(icon);
        });
    }
}
